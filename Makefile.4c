KALDI_ROOT=/opt/kaldi

VOSK_SOURCES=native/kaldi_recognizer.cc native/lid_model.cc native/lid_api.cc

CFLAGS=-g -O2 -DFST_NO_DYNAMIC_LINKING -I./native -I$(KALDI_ROOT)/src -I$(KALDI_ROOT)/tools/openfst/include

ifeq ($(OS),Windows_NT)
	TARGET := test_lid.exe
else
	UNAME_S := $(shell uname -s)
	ifeq ($(UNAME_S),Linux)
		TARGET := test_lid
	endif
endif

LIBS= \
	$(KALDI_ROOT)/src/online2/kaldi-online2.a \
	$(KALDI_ROOT)/src/decoder/kaldi-decoder.a \
	$(KALDI_ROOT)/src/ivector/kaldi-ivector.a \
	$(KALDI_ROOT)/src/gmm/kaldi-gmm.a \
	$(KALDI_ROOT)/src/nnet3/kaldi-nnet3.a \
	$(KALDI_ROOT)/src/tree/kaldi-tree.a \
	$(KALDI_ROOT)/src/feat/kaldi-feat.a \
	$(KALDI_ROOT)/src/lat/kaldi-lat.a \
	$(KALDI_ROOT)/src/lm/kaldi-lm.a \
	$(KALDI_ROOT)/src/hmm/kaldi-hmm.a \
	$(KALDI_ROOT)/src/transform/kaldi-transform.a \
	$(KALDI_ROOT)/src/cudamatrix/kaldi-cudamatrix.a \
	$(KALDI_ROOT)/src/matrix/kaldi-matrix.a \
	$(KALDI_ROOT)/src/fstext/kaldi-fstext.a \
	$(KALDI_ROOT)/src/util/kaldi-util.a \
	$(KALDI_ROOT)/src/base/kaldi-base.a \
	$(KALDI_ROOT)/tools/OpenBLAS/libopenblas.a \
	$(KALDI_ROOT)/tools/openfst/lib/libfst.a \
	$(KALDI_ROOT)/tools/openfst/lib/libfstngram.a


all: $(TARGET)

$(TARGET): test_lid.o liblid.a
	g++ $^ -o $@ $(LIBS) -lgfortran -lpthread

test_lid_shared: test_lid.o
	g++ $^ -Wl,--no-as-needed -o $@  -L. -lgfortran -lpthread -L/usr/local/lib -ldl -lm -L. -llid

liblid.a: $(VOSK_SOURCES:.cc=.o)
	ar rcs $@ $^

%.o: %.c
	g++ $(CFLAGS) -c -o $@ $<

%.o: %.cc
	g++ -std=c++11 $(CFLAGS) -c -o $@ $<

clean:
	rm -f *.o *.a $(TARGET)